#!/usr/bin/env node

const clipboardy = require('clipboardy');
const {shellSync} = require('execa');
const dayjs = require('dayjs');

const git = 'git';

function getPlatform() {
	switch (process.platform) {
		case 'darwin':
			return 'macos';
		case 'win32':
			return 'windows';
	}
}

const platform = getPlatform();

const projectMap = {
    classstatic: 'classstatic',
    mcstatic: 'mcstatic',
    'class-node': 'class-node-package',
    'mc-node': 'mc-node-package'
};

const projectMapKeys = Object.keys(projectMap);

const getProject = () => {
    const argvProject = process.argv[2];
    let res = '';
    if (argvProject) {
        res = argvProject;
    } else {
        res = process.cwd(); 
    }
    const splitStr = platform === 'windows' ? '\\' : '/';
    return res.split(splitStr).slice(-1)[0];
};
const project = getProject();
if (!projectMapKeys.includes(project)) {
    console.log('仓库路径不对', project);
    process.exit(8);
}
const branch = shellSync(`${git} symbolic-ref --short -q HEAD`);
const featureName = branch.stdout;
const featureId = featureName.includes('develop') ? '' : `_${featureName.split('_')[1]}`;
const dateId = dayjs().format('YYYYMMDD_HHmm');
const featureType = featureName.includes('develop') ? 't_q' : 't_b';
const tag = `${featureType}_${projectMap[project]}${featureId}_${dateId}`;

clipboardy.writeSync(tag);
console.log(tag);
shellSync(`${git} tag ${tag}`);
shellSync(`${git} push origin ${tag}`);