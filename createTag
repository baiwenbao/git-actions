#!/usr/bin/env node

const clipboardy = require('clipboardy');
const {shellSync} = require('execa');

const git = 'git';

const projectMap = {
    classstatic: 'classstatic',
    mcstatic: 'mcstatic',
    'class-node': 'class-node-package',
    'mc-node': 'mc-node-package'
};

const projectMapKeys = Object.keys(projectMap);

const getProject = () => {
    const argvProject = process.argv[2];
    let res = '';
    if (argvProject) {
        res = argvProject;
    } else {
        res = process.cwd(); 
    }
    return res.split('/').slice(-1)[0];
};
const project = getProject();
if (!projectMapKeys.includes(project)) return;
const branch = shellSync(`${git} symbolic-ref --short -q HEAD`);
const featureName = branch.stdout;
const featureId = featureName.includes('develop') ? '' : `_${featureName.split('_')[1]}`;
const fill = n => n >= 10 ? n : `0${n}`;
const date = new Date();
const dateId = `${date.getFullYear()}${fill(date.getMonth() + 1)}${fill(date.getDate())}_${fill(date.getHours())}${fill(date.getMinutes())}`;
const featureType = featureName.includes('develop') ? 't_q' : 't_b';
const tag = `${featureType}_${projectMap[project]}${featureId}_${dateId}`;

clipboardy.writeSync(tag);
shellSync(`${git} tag ${tag}`);
shellSync(`${git} push origin ${tag}`);
